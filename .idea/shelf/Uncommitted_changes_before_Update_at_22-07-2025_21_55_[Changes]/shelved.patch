Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n  <groupId>org.example</groupId>\r\n  <artifactId>APIAutomation6</artifactId>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <packaging>jar</packaging>\r\n\r\n  <name>APIAutomation6</name>\r\n  <url>http://maven.apache.org</url>\r\n\r\n  <properties>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>junit</groupId>\r\n      <artifactId>junit</artifactId>\r\n      <version>3.8.1</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision a3763f23364286b5e94a0618d9b73a2660259c24)
+++ b/pom.xml	(date 1753200711853)
@@ -21,5 +21,43 @@
       <version>3.8.1</version>
       <scope>test</scope>
     </dependency>
+
+
+    <dependency>
+      <groupId>io.rest-assured</groupId>
+      <artifactId>rest-assured</artifactId>
+      <version>5.5.2</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.testng</groupId>
+      <artifactId>testng</artifactId>
+      <version>7.10.2</version>
+      <scope>test</scope>
+    </dependency>
+    <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
+    <dependency>
+      <groupId>com.google.code.gson</groupId>
+      <artifactId>gson</artifactId>
+      <version>2.13.1</version>
+    </dependency>
+    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
+    <dependency>
+      <groupId>com.fasterxml.jackson.core</groupId>
+      <artifactId>jackson-databind</artifactId>
+      <version>2.19.2</version>
+    </dependency>
+    <!-- https://mvnrepository.com/artifact/com.github.javafaker/javafaker -->
+    <dependency>
+      <groupId>com.github.javafaker</groupId>
+      <artifactId>javafaker</artifactId>
+      <version>1.0.2</version>
+    </dependency>
+    <!-- https://mvnrepository.com/artifact/io.qameta.allure/allure-testng -->
+    <dependency>
+      <groupId>io.qameta.allure</groupId>
+      <artifactId>allure-testng</artifactId>
+      <version>2.29.1</version>
+    </dependency>
   </dependencies>
 </project>
Index: src/test/java/org/example/Base/BaseTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/Base/BaseTest.java b/src/test/java/org/example/Base/BaseTest.java
new file mode 100644
--- /dev/null	(date 1753201274999)
+++ b/src/test/java/org/example/Base/BaseTest.java	(date 1753201274999)
@@ -0,0 +1,4 @@
+package org.example.Base;
+
+public class BaseTest {
+}
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision a3763f23364286b5e94a0618d9b73a2660259c24)
+++ b/README.md	(date 1753197684962)
@@ -1,0 +1,225 @@
+# API Automation RestAssured (in Java)
+
+#### Author - Pramod Dutta
+
+API Automation Framework with the CRUD of Restful Booker
+
+`mvn test -Dsurefire.suiteXmlFiles=testng.xml`
+
+<img width="1130" alt="Screenshot 2023-10-31 at 12 25 55 PM" src="https://github.com/PramodDutta/APIAutomationRestAssured/assets/1409610/69f398b3-8798-4fba-a091-3b1e321dcc7d">
+
+
+
+## Tech Stack
+
+1. Java ( JDK > 17)
+2. Rest Assured
+3. Apache POI, TestNG, Maven.
+4. AssertJ (Advance assertions)
+5. Jackson and GSON
+6. Log4j
+7. Allure Report
+8. Full Folder Structure(Hybrid) Framework.
+9. Jenkins File
+
+#### API Framework Important Components
+![Screenshot 2024-06-29 at 12 44 29](https://github.com/PramodDutta/APIAutomationFramworkATB6x/assets/1409610/98bbc62d-7837-4bdc-900b-b214c675af6d)
+
+#### Running via CI/CD
+<img width="1262" alt="Screenshot 2023-10-31 at 12 26 07 PM" src="https://github.com/PramodDutta/APIAutomationRestAssured/assets/1409610/2d58bf82-0ffb-4fcb-a2d9-cf26920fa7b5">
+
+
+Run
+
+### Basic Create Test
+* Install Maven
+* add config to run the suite or testng
+
+```<build>
+    <plugins>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-plugin</artifactId>
+        <version>3.3.0</version>
+        <configuration>
+          <suiteXmlFiles>
+            <suiteXmlFile>${suiteXmlFile}</suiteXmlFile>
+          </suiteXmlFiles>
+        </configuration>
+      </plugin>
+    </plugins>
+  </build>
+```
+to **pom.xml**
+
+```mvn clean test -DsuiteXmlFile=testng.xml ```
+
+
+### Parallel Execution
+
+To run tests in parallel, add the parallel attribute to your testng.xml file:
+
+```<suite name="All Test Suite" parallel="methods" thread-count="2">```
+
+
+### Integration Test (Create BookinG and Create Token , Update and Delete Booking)
+
+``` mvn clean test -DsuiteXmlFile=testng-integration.xml```
+
+### Allure Report Generated.
+
+
+```allure serve allure-results/```
+
+![image](https://github.com/PramodDutta/APIAutomationFramworkATB6x/assets/1409610/79ba2093-a1b7-4b36-ba16-9a6827af7afe)
+
+
+Certainly! I'll guide you through the steps to install Allure and generate a report for a Java project using TestNG. Here's a step-by-step process:
+
+#### 1. Install Allure
+
+First, you need to install Allure Command Line Tool. If you're using a Mac, you can use the following Brew command:
+
+```
+brew install allure
+```
+
+For other operating systems, please refer to the official Allure documentation for installation instructions.
+
+#### 2. Set up your Java project
+
+Ensure you have a Java project set up with TestNG. If not, create a new Maven project and add the necessary dependencies.
+
+#### 3. Add Allure dependencies
+
+Add the following dependencies to your `pom.xml` file:
+
+```xml
+<dependency>
+    <groupId>io.qameta.allure</groupId>
+    <artifactId>allure-testng</artifactId>
+    <version>2.13.0</version>
+</dependency>
+```
+
+#### 4. Configure Allure in your project
+
+Update the `<build>` section of your `pom.xml` to include the Allure Maven plugin:
+
+```xml
+<build>
+    <plugins>
+        <plugin>
+            <groupId>io.qameta.allure</groupId>
+            <artifactId>allure-maven</artifactId>
+            <version>2.10.0</version>
+            <configuration>
+                <reportVersion>2.13.0</reportVersion>
+            </configuration>
+        </plugin>
+    </plugins>
+</build>
+```
+
+
+#### 5. Run your tests
+
+Execute your TestNG tests using Maven:
+
+```
+mvn clean test
+```
+
+This will run your tests and generate the Allure results in the `target/allure-results` directory.
+
+#### 6. Generate the Allure report
+
+After running your tests, use the following command to generate the Allure report:
+
+```
+allure generate target/allure-results --clean -o allure-report
+```
+
+This command will create an `allure-report` folder containing the generated report.
+
+#### 7. View the report
+
+To view the report, you can use the following command:
+
+```
+allure open allure-report
+```
+
+This will start a local web server and open the report in your default browser.
+
+#### Additional Tips
+
+- You can use the `@Severity` annotation to indicate the importance of your tests.
+- Allure supports attaching screenshots, which can be useful for UI tests.
+- For more advanced configurations and features, refer to the official Allure documentation.
+
+By following these steps, you should be able to successfully install Allure, run your TestNG tests, and generate a comprehensive Allure report for your Java project.
+
+
+#### Try these Cases also
+
+POSTMAN Assignments
+ Assignment  1
+
+Create the Collections for the This Test cases :
+
+App - Restful Booker with(Auth)
+
+1. Create a Booking, Update the Booking Name, Get the Booking by Id and verify.
+2.  Create a Booking, Delete the Booking with Id and Verify using GET request that it should not exist.
+3. Get an Existing Booking from Get All Bookings Ids , Update a Booking and Verify using GET by id.
+4. Create a BOOKING, Delete It
+5. Invalid Creation - enter a wrong payload or Wrong JSON.
+6. Trying to Update on a Delete Id
+
+
+Test for the Single Req
+1. Response
+2. Status Code
+3. Headers
+
+———
+
+Create Collection
+- [ ] RestfulBooker CRUD operation.
+- [ ] Add from Snippets , Test cases
+- [ ] Integration Scenarios (Hard Coded)
+
+
+
+Assert. - Should not happen (9%)
+Expect. - Actual Result == Expected ( 90%)
+Should - Hard it should happen (1%)
+
+
+
+Assignments 2
+
+Full CRUD Test cases for the Github Repo API with Integration Scenarios
+
+1. Create a Test Cases on Template.
+2. Submit the Postman Collection with Test cases Added
+3. Add the Test cases and integration scenarios also
+4. Write Better Advance Postman Test cases.
+
+
+Assignments 3
+
+1. Get Token ( 2 Step)
+2. Upload image on Imgur with OAuth 2.0 ( hash will be generated)
+3. Get that image and verify the link hash
+
+
+Assignments 4
+
+Try the Complex JSON Parsing with the Map and Filters
+On Assignment Tab.
+
+Assignments 5
+
+Add JSON Schema Validation for POST, PUT Request for the Restful BOOker.
\ No newline at end of file
Index: src/main/java/org/example/modules/PayloadManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/modules/PayloadManager.java b/src/main/java/org/example/modules/PayloadManager.java
new file mode 100644
--- /dev/null	(date 1753199378121)
+++ b/src/main/java/org/example/modules/PayloadManager.java	(date 1753199378121)
@@ -0,0 +1,4 @@
+package org.example.modules;
+
+public class PayloadManager {
+}
Index: src/main/java/org/example/endpoints/APIConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/endpoints/APIConstants.java b/src/main/java/org/example/endpoints/APIConstants.java
new file mode 100644
--- /dev/null	(date 1753199276618)
+++ b/src/main/java/org/example/endpoints/APIConstants.java	(date 1753199276618)
@@ -0,0 +1,14 @@
+package org.example.endpoints;
+
+public class APIConstants {
+
+    public static String BASE_URL ="https://restful-booker.herokuapp.com";
+    public static String CREATE_UPDATE_BOOKING_URL="/booking";
+    public static String AUTH_URL="/auth";
+    public static String PING_URL="/ping";
+
+    public static String GET_BOOKING_URL="/booking/";
+}
+
+
+
Index: src/main/java/org/example/pojos/Booking.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/pojos/Booking.java b/src/main/java/org/example/pojos/Booking.java
new file mode 100644
--- /dev/null	(date 1753199784798)
+++ b/src/main/java/org/example/pojos/Booking.java	(date 1753199784798)
@@ -0,0 +1,72 @@
+package org.example.pojos;
+
+public class Booking {
+
+    private String firstname;
+    private String lastname;
+    private String totalprice;
+    private String depositpaid;
+
+    public void setFirstname(String firstname) {
+        this.firstname = firstname;
+    }
+
+    public void setLastname(String lastname) {
+        this.lastname = lastname;
+    }
+
+    public void setTotalprice(String totalprice) {
+        this.totalprice = totalprice;
+    }
+
+    public void setDepositpaid(String depositpaid) {
+        this.depositpaid = depositpaid;
+    }
+
+    public void setBookingDates(BookingDates bookingDates) {
+        this.bookingDates = bookingDates;
+    }
+
+    public void setAdditionalneeds(String additionalneeds) {
+        Additionalneeds = additionalneeds;
+    }
+
+    public String getFirstname() {
+        return firstname;
+    }
+
+    public String getLastname() {
+        return lastname;
+    }
+
+    @Override
+    public String toString() {
+        return "Booking{" +
+                "firstname='" + firstname + '\'' +
+                ", lastname='" + lastname + '\'' +
+                ", totalprice='" + totalprice + '\'' +
+                ", depositpaid='" + depositpaid + '\'' +
+                ", bookingDates=" + bookingDates +
+                ", Additionalneeds='" + Additionalneeds + '\'' +
+                '}';
+    }
+
+    public String getTotalprice() {
+        return totalprice;
+    }
+
+    public String getDepositpaid() {
+        return depositpaid;
+    }
+
+    public BookingDates getBookingDates() {
+        return bookingDates;
+    }
+
+    public String getAdditionalneeds() {
+        return Additionalneeds;
+    }
+
+    private BookingDates bookingDates;
+    private String Additionalneeds;
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"49ad0f90-6566-40a1-9480-1495ea213f29\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"30EXniIUy84Nc2P1jg4VK4iDWaI\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Maven. [org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate].executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"kotlin-language-version-configured\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"49ad0f90-6566-40a1-9480-1495ea213f29\" name=\"Changes\" comment=\"\" />\r\n      <created>1753193875180</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1753193875180</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a3763f23364286b5e94a0618d9b73a2660259c24)
+++ b/.idea/workspace.xml	(date 1753200736381)
@@ -4,17 +4,43 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="49ad0f90-6566-40a1-9480-1495ea213f29" name="Changes" comment="" />
+    <list default="true" id="49ad0f90-6566-40a1-9480-1495ea213f29" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/endpoints/APIConstants.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/modules/PayloadManager.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/pojos/Auth.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/pojos/Booking.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/pojos/BookingDates.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/pojos/BookingResponse.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/pojos/TokenResponse.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/actions/AssertActions.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/utils/Fakerutil.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
   <component name="ProjectId" id="30EXniIUy84Nc2P1jg4VK4iDWaI" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -24,8 +50,10 @@
     "Maven. [org.apache.maven.plugins:maven-archetype-plugin:RELEASE:generate].executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "git-widget-placeholder": "master",
-    "kotlin-language-version-configured": "true"
+    "kotlin-language-version-configured": "true",
+    "settings.editor.selected.configurable": "reference.settings.project.maven.repository.indices"
   }
 }]]></component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
Index: src/main/java/org/example/pojos/BookingDates.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/pojos/BookingDates.java b/src/main/java/org/example/pojos/BookingDates.java
new file mode 100644
--- /dev/null	(date 1753199866036)
+++ b/src/main/java/org/example/pojos/BookingDates.java	(date 1753199866036)
@@ -0,0 +1,22 @@
+package org.example.pojos;
+
+public class BookingDates {
+String checkin;
+String checkout;
+
+    public String getCheckin() {
+        return checkin;
+    }
+
+    public void setCheckin(String checkin) {
+        this.checkin = checkin;
+    }
+
+    public void setCheckout(String checkout) {
+        this.checkout = checkout;
+    }
+
+    public String getCheckout() {
+        return checkout;
+    }
+}
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1753199378586)
+++ b/.idea/uiDesigner.xml	(date 1753199378586)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/org/example/pojos/TokenResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/pojos/TokenResponse.java b/src/main/java/org/example/pojos/TokenResponse.java
new file mode 100644
--- /dev/null	(date 1753200049631)
+++ b/src/main/java/org/example/pojos/TokenResponse.java	(date 1753200049631)
@@ -0,0 +1,13 @@
+package org.example.pojos;
+
+public class TokenResponse {
+    private String token;
+
+    public String getToken() {
+        return token;
+    }
+
+    public void setToken(String token) {
+        this.token = token;
+    }
+}
Index: src/main/java/org/example/pojos/BookingResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/pojos/BookingResponse.java b/src/main/java/org/example/pojos/BookingResponse.java
new file mode 100644
--- /dev/null	(date 1753199784788)
+++ b/src/main/java/org/example/pojos/BookingResponse.java	(date 1753199784788)
@@ -0,0 +1,30 @@
+package org.example.pojos;
+
+public class BookingResponse {
+    private Integer bookingId;
+    private Booking booking;
+
+    public void setBookingId(Integer bookingId) {
+        this.bookingId = bookingId;
+    }
+
+    public void setBooking(Booking booking) {
+        this.booking = booking;
+    }
+
+    @Override
+    public String toString() {
+        return "BookingResponse{" +
+                "bookingId=" + bookingId +
+                ", booking=" + booking +
+                '}';
+    }
+
+    public Integer getBookingId() {
+        return bookingId;
+    }
+
+    public Booking getBooking() {
+        return booking;
+    }
+}
Index: src/main/java/org/example/pojos/Auth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/pojos/Auth.java b/src/main/java/org/example/pojos/Auth.java
new file mode 100644
--- /dev/null	(date 1753199980725)
+++ b/src/main/java/org/example/pojos/Auth.java	(date 1753199980725)
@@ -0,0 +1,23 @@
+package org.example.pojos;
+
+public class Auth {
+
+  private String username;
+  private String password;
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+}
Index: src/test/java/org/example/utils/Fakerutil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/utils/Fakerutil.java b/src/test/java/org/example/utils/Fakerutil.java
new file mode 100644
--- /dev/null	(date 1753201079521)
+++ b/src/test/java/org/example/utils/Fakerutil.java	(date 1753201079521)
@@ -0,0 +1,14 @@
+package org.example.utils;
+
+import com.github.javafaker.Faker;
+
+public class Fakerutil {
+
+    Faker faker= new Faker();
+    public String GetFirstName(){
+        return faker.name().firstName();
+    }
+    public String GetLastName(){
+        return faker.name().lastName();
+    }
+}
Index: src/test/java/org/example/actions/AssertActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/actions/AssertActions.java b/src/test/java/org/example/actions/AssertActions.java
new file mode 100644
--- /dev/null	(date 1753200208703)
+++ b/src/test/java/org/example/actions/AssertActions.java	(date 1753200208703)
@@ -0,0 +1,4 @@
+package org.example.actions;
+
+public class AssertActions {
+}
Index: src/test/java/org/example/tests/Integration/TCIntegration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/tests/Integration/TCIntegration.java b/src/test/java/org/example/tests/Integration/TCIntegration.java
new file mode 100644
--- /dev/null	(date 1753201163231)
+++ b/src/test/java/org/example/tests/Integration/TCIntegration.java	(date 1753201163231)
@@ -0,0 +1,4 @@
+package org.example.tests.Integration;
+
+public class TCIntegration {
+}
Index: src/test/java/org/example/tests/crud/testCreateBooking.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/tests/crud/testCreateBooking.kt b/src/test/java/org/example/tests/crud/testCreateBooking.kt
new file mode 100644
--- /dev/null	(date 1753201110282)
+++ b/src/test/java/org/example/tests/crud/testCreateBooking.kt	(date 1753201110282)
@@ -0,0 +1,4 @@
+package org.example.tests.crud
+
+class testCreateBooking {
+}
\ No newline at end of file
